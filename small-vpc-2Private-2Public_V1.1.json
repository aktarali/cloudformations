{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CSL Cloud formations script to create entire VPC network layout for BP segments.",
    "Parameters": {
        "VPCCidrRange": {
            "Description": "The CIDR range to use (must be unique and approved by CSL)",
            "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/26",
            "Type": "String",
            "ConstraintDescription": "VPCCidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "Owner": {
            "Description": "The VPC owner and authority",
            "Type": "String"
        },
        "PrivateSubnetACidrRange": {
            "Type": "String",
            "Description": "Private Subnet A Cidr IP range",
            "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/28",
            "ConstraintDescription": "PrivateSubnetACidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PrivateSubnetBCidrRange": {
            "Type": "String",
            "Description": "Private Subnet B Cidr IP range",
            "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/28",
            "ConstraintDescription": "PrivateSubnetBCidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PublicSubnetACidrRange": {
            "Type": "String",
            "Description": "Public Subnet A IP range",
            "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/28",
            "ConstraintDescription": "PublicSubnetACidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PublicSubnetBCidrRange": {
            "Type": "String",
            "Description": "Public Subnet B IP range",
            "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/28",
            "ConstraintDescription": "PublicSubnetBCidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "DomainName": {
            "Description": "Domain Name for VPC",
            "Type": "String",
            "ConstraintDescription": "DomainName must be a valid Domain XX.XX.XXX i.e. cloud.bp.com or aws.cloud.bp.com"
        },
        "CSLDomainIPs": {
            "Description": "CSL Active Directory IP's (format: '1.2.3.4, 5.6.7.8')",
            "Type": "String",
            "AllowedPattern": "(\\b(?:\\d{1,3}\\.){3}\\d{1,3})(\\,\\s*(?:\\d{1,3}\\.){3}\\d{1,3})*"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCidrRange"
                }
            }
        },
        "PrivateSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnetACidrRange"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateSubnetA" }
              ],
                "AvailabilityZone": "eu-west-1a"
            }
        },
        "PrivateSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnetBCidrRange"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateSubnetB" }
              ],
                "AvailabilityZone": "eu-west-1b"
            }
        },
        "PublicSubnetA": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetACidrRange"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicSubnetA" }
              ],
                "AvailabilityZone": "eu-west-1c"
            }
        },
        "PublicSubnetB": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetBCidrRange"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicSubnetB" }
              ],
                "AvailabilityZone": "eu-west-1a"
            }
        },
        "PrivateRouteTableA": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateRouteTableA" }
              ]
            }
        },
        "PrivateSubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnetA"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableA"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateSubnetARouteTableAssociation" }
              ]
            }
        },
        "PrivateRouteTableB": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateRouteTableB" }
              ]
            }
        },
        "PrivateSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnetB"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTableB"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateSubnetBRouteTableAssociation" }
              ]
            }
        },
        
        "PublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
            "VpcId" : { "Ref" : "VPC" }
        },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicRouteTable" }
              ]
      },

        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "GatewayToInternet",
            "Properties" : {
            "RouteTableId" : { "Ref" : "PublicRouteTable" },
            "DestinationCidrBlock" : "0.0.0.0/0",
            "GatewayId" : { "Ref" : "InternetGateway" }
        },
            "Tags" : [
                    { "Key" : "Name", "Value" : "PublicRoute" }
              ]
      },

        "PublicSubnetARouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetA"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicSubnetARouteTableAssociation" }
              ]
            }
        },
        "PublicSubnetBRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetB"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicSubnetBRouteTableAssociation" }
              ]
            }
        },
        "PrivateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateNetworkAcl" }
              ]
            }
        },
        "InboundPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": {
                    "Ref": "VPCCidrRange"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "InboundPrivateNetworkAclEntry" }
              ]
            }
        },
        "OutboundPrivateNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": {
                    "Ref": "VPCCidrRange"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "OutboundPrivateNetworkAclEntry" }
              ]
            }
        },
        "PublicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicNetworkAcl" }
              ]
            }
        },
        "InboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": {
                    "Ref": "VPCCidrRange"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "InboundPublicNetworkAclEntry" }
              ]
            }
        },
        "OutboundPublicNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": {
                    "Ref": "VPCCidrRange"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "OutboundPublicNetworkAclEntry" }
              ]
            }
        },
        "PrivateSubnetANetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnetA"
                },
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateSubnetANetworkAclAssociation" }
              ]
            }
        },
        "PrivateSubnetBNetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnetB"
                },
                "NetworkAclId": {
                    "Ref": "PrivateNetworkAcl"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PrivateSubnetBNetworkAclAssociation" }
              ]
            }
        },
        "PublicSubnetANetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetA"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicSubnetANetworkAclAssociation" }
              ]
            }
        },
        "PublicSubnetBNetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnetB"
                },
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "Tags" : [
                    { "Key" : "Name", "Value" : "PublicSubnetBNetworkAclAssociation" }
              ]
            }
        },
        
       "InternetGateway" : {
         "Type" : "AWS::EC2::InternetGateway",
         "Properties" : {
        }
      },
      "GatewayToInternet" : {
         "Type" : "AWS::EC2::VPCGatewayAttachment",
         "Properties" : {
           "VpcId" : { "Ref" : "VPC" },
           "InternetGatewayId" : { "Ref" : "InternetGateway" }
         }
      },
        "myDhcpOptions": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": {
                    "Ref": "DomainName"
                },
                "DomainNameServers": [
                    {
                        "Ref": "CSLDomainIPs"
                    }
                ],
                "NtpServers": [
                    {
                        "Ref": "CSLDomainIPs"
                    }
                ]
            }
        },
        "myVPCDHCPOptionsAssociation": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "DhcpOptionsId": {
                    "Ref": "myDhcpOptions"
                }
            }
        }
    }
}
