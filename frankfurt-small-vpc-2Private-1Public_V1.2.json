{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CSCE (Cloud Services Centre of Excellence) Cloud formations script to create VPC network and components.",
  "Parameters": {
    "VPCCidrRange": {
      "Description": "The CIDR range to use (must be unique and approved by CSCE)",
      "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/23",
      "Type": "String",
      "ConstraintDescription": "VPCCidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "Owner": {
      "Description": "The VPC owner and authority",
      "Type": "String"
    },
    "BusinessUnit": {
      "Description": "Business Unit",
      "Type": "String"
    },
    "Project": {
      "Description": "Project Name and Short description",
      "Type": "String"
    },
    "PrivateSubnetACidrRange": {
      "Type": "String",
      "Description": "Private Subnet A Cidr IP range",
      "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/27",
      "ConstraintDescription": "PrivateSubnetACidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PrivateSubnetBCidrRange": {
      "Type": "String",
      "Description": "Private Subnet B Cidr IP range",
      "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/27",
      "ConstraintDescription": "PrivateSubnetBCidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PublicSubnetACidrRange": {
      "Type": "String",
      "Description": "Public Subnet A IP range",
      "AllowedPattern": "\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b\\/27",
      "ConstraintDescription": "PublicSubnetACidrRange must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "DomainName": {
      "Description": "Domain Name for VPC",
      "Type": "String",
      "ConstraintDescription": "DomainName must be a valid Domain XX.XX.XXX i.e. cloud.bp.com or aws.cloud.bp.com"
    },
    "CSCEDomainIPs": {
      "Description": "CSCE Active Directory IP's (format: '1.2.3.4, 5.6.7.8')",
      "Type": "String",
      "AllowedPattern": "(\\b(?:\\d{1,3}\\.){3}\\d{1,3})(\\,\\s*(?:\\d{1,3}\\.){3}\\d{1,3})*"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCCidrRange"
        }
      }
    },
    "PrivateSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetACidrRange"
        },
        "AvailabilityZone": "eu-central-1a",
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnetA"
          }
        ]
      }
    },
    "PrivateSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetBCidrRange"
        },
        "AvailabilityZone": "eu-central-1b",
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnetB"
          }
        ]
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetACidrRange"
        },
        "AvailabilityZone": "eu-central-1b",
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnetA"
          }
        ]
      }
    },
    "PrivateRouteTableA": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateRouteTableA"
          }
        ]
      }
    },
    "PrivateSubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetA"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTableA"
        }
      }
    },
    "PrivateRouteTableB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateRouteTableB"
          }
        ]
      }
    },
    "PrivateSubnetBRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetB"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTableB"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicRouteTable"
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "GatewayToInternet",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetA"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateNetworkAcl"
          }
        ]
      }
    },
    "InboundPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPrivateNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicNetworkAcl"
          }
        ]
      }
    },
    "InboundPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PrivateSubnetANetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetA"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PrivateSubnetBNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetB"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PublicSubnetANetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetA"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "myDhcpOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": {
          "Ref": "DomainName"
        },
        "DomainNameServers": [
          {
            "Ref": "CSCEDomainIPs"
          }
        ],
        "NtpServers": [
          {
            "Ref": "CSCEDomainIPs"
          }
        ]
      }
    },
    "myVPCDHCPOptionsAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "DhcpOptionsId": {
          "Ref": "myDhcpOptions"
        }
      }
    }
  }
}
